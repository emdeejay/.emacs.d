(global-set-key "\C-cs" 'shell)
(global-set-key "\C-cS" 'term)
(global-set-key "\C-cc" 'compile)
(global-set-key "\C-xk" '(lambda () 
			   (interactive)
			   (if (equal "*scratch*" (buffer-name (current-buffer)))
			       (message "Refusing to kill *scratch*")
			     (kill-buffer(current-buffer)))))
(global-set-key "\C-h\C-m" 'man)
(global-set-key "\C-xK" 'kill-buffer)
(global-set-key "\C-cm" 'toggle-frame-fullscreen)
(global-set-key "\C-cu" '(lambda (start end) (interactive "r") (shell-command-on-region start end "uniq" nil t nil nil)))
(global-set-key "\C-xb" 'ido-switch-buffer)
(global-set-key "\C-xB" 'ido-switch-buffer-other-window)
(global-set-key "\C-xO" '(lambda () (interactive) (select-window (previous-window))))
(global-set-key "\C-cx" 'exchange-windows)
(global-set-key "\C-c\C-s" '(lambda (rev start end) (interactive "P\nr") (sort-lines rev start end)))
(global-set-key "\C-cd" (lambda () (interactive) (display-buffer "*Messages*")))
(global-set-key "\C-cb" (lambda () (interactive) (browse-url-at-point)))
;;(require 'smartmacros "kbdmacros")
(put 'narrow-to-region 'disabled nil)
(put 'downcase-region 'disabled nil)



(provide 'my-global-keybindings)
